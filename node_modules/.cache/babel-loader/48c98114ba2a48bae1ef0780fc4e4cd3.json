{"ast":null,"code":"var _jsxFileName = \"/Volumes/myData/projects/playground/my-ice/src/structure/LoaderMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoaderMessage = _ref => {\n  _s();\n\n  let {\n    loadingMessage,\n    isLoading,\n    doneMessage\n  } = _ref;\n  const [showLoadingMessage, setShowLoadingMessage] = useState(false);\n  const [showDoneMessage, setDoneMessage] = useState(false);\n  const isLoadingPrevious = useRef(null);\n  useEffect(() => {\n    let loadingMessageDelay;\n    let doneMessageDelay;\n\n    if (isLoading) {\n      loadingMessageDelay = setTimeout(() => {\n        setShowLoadingMessage(true);\n      }, 400);\n    } else {\n      if (isLoadingPrevious.current) {\n        setDoneMessage(true);\n        doneMessageDelay = setTimeout(() => {\n          setDoneMessage(true);\n        }, 300);\n      }\n    }\n\n    isLoadingPrevious.current = isLoading;\n    return () => {\n      clearTimeout(loadingMessageDelay);\n      clearTimeout(doneMessageDelay);\n      setShowLoadingMessage(false);\n      setDoneMessage(false);\n    };\n  }, [isLoading]); //return showLoadingMessage ? <p className=\"loading\">  {loadingMessage}</p> : null;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    children: [showLoadingMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: [\"  \", loadingMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }, this), showDoneMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"visually-hidden\",\n      children: [\" \", doneMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(LoaderMessage, \"RkXbNaEC6vmdF2Q0NSAyn++WZQs=\");\n\n_c = LoaderMessage;\nLoaderMessage.propTypes = {\n  loadingMessage: PropTypes.string.isRequired,\n  doneMessage: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool\n};\nexport default LoaderMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoaderMessage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","PropTypes","LoaderMessage","loadingMessage","isLoading","doneMessage","showLoadingMessage","setShowLoadingMessage","showDoneMessage","setDoneMessage","isLoadingPrevious","loadingMessageDelay","doneMessageDelay","setTimeout","current","clearTimeout","propTypes","string","isRequired","bool"],"sources":["/Volumes/myData/projects/playground/my-ice/src/structure/LoaderMessage.js"],"sourcesContent":["import React , { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types'\n\nconst LoaderMessage = ( {loadingMessage, isLoading , doneMessage} )=> {\n\n    const [ showLoadingMessage , setShowLoadingMessage ] = useState(false);\n    const [ showDoneMessage , setDoneMessage ] = useState(false);\n    const isLoadingPrevious = useRef(null);\n    \n    \n    useEffect(() => {\n        let loadingMessageDelay;\n        let doneMessageDelay;\n        if(isLoading){\n            loadingMessageDelay = setTimeout(() =>{\n                setShowLoadingMessage(true);\n            }, 400);\n        } else {\n            if(isLoadingPrevious.current){\n                setDoneMessage(true)\n                doneMessageDelay = setTimeout(() =>{\n                    setDoneMessage(true);\n                }, 300);\n            }\n\n        }\n        \n        isLoadingPrevious.current = isLoading;\n        return () => {\n            clearTimeout(loadingMessageDelay);\n            clearTimeout(doneMessageDelay);\n            setShowLoadingMessage(false);\n            setDoneMessage(false);\n        }\n    } , [isLoading]); \n\n\n\n    //return showLoadingMessage ? <p className=\"loading\">  {loadingMessage}</p> : null;\n\n    return <div aria-live=\"assertive\" aria-atomic=\"true\"> \n        {showLoadingMessage && <p className=\"loading\">  {loadingMessage}</p> }\n        {showDoneMessage && <p className=\"visually-hidden\"> {doneMessage}</p> }\n    </div>;\n}\n\nLoaderMessage.propTypes = {\n    loadingMessage: PropTypes.string.isRequired,\n    doneMessage: PropTypes.string.isRequired,\n    isLoading: PropTypes.bool\n\n}\n\nexport default LoaderMessage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,EAAsCC,MAAtC,QAAoD,OAApD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,aAAa,GAAG,QAAgD;EAAA;;EAAA,IAA9C;IAACC,cAAD;IAAiBC,SAAjB;IAA6BC;EAA7B,CAA8C;EAElE,MAAM,CAAEC,kBAAF,EAAuBC,qBAAvB,IAAiDR,QAAQ,CAAC,KAAD,CAA/D;EACA,MAAM,CAAES,eAAF,EAAoBC,cAApB,IAAuCV,QAAQ,CAAC,KAAD,CAArD;EACA,MAAMW,iBAAiB,GAAGV,MAAM,CAAC,IAAD,CAAhC;EAGAF,SAAS,CAAC,MAAM;IACZ,IAAIa,mBAAJ;IACA,IAAIC,gBAAJ;;IACA,IAAGR,SAAH,EAAa;MACTO,mBAAmB,GAAGE,UAAU,CAAC,MAAK;QAClCN,qBAAqB,CAAC,IAAD,CAArB;MACH,CAF+B,EAE7B,GAF6B,CAAhC;IAGH,CAJD,MAIO;MACH,IAAGG,iBAAiB,CAACI,OAArB,EAA6B;QACzBL,cAAc,CAAC,IAAD,CAAd;QACAG,gBAAgB,GAAGC,UAAU,CAAC,MAAK;UAC/BJ,cAAc,CAAC,IAAD,CAAd;QACH,CAF4B,EAE1B,GAF0B,CAA7B;MAGH;IAEJ;;IAEDC,iBAAiB,CAACI,OAAlB,GAA4BV,SAA5B;IACA,OAAO,MAAM;MACTW,YAAY,CAACJ,mBAAD,CAAZ;MACAI,YAAY,CAACH,gBAAD,CAAZ;MACAL,qBAAqB,CAAC,KAAD,CAArB;MACAE,cAAc,CAAC,KAAD,CAAd;IACH,CALD;EAMH,CAxBQ,EAwBL,CAACL,SAAD,CAxBK,CAAT,CAPkE,CAmClE;;EAEA,oBAAO;IAAK,aAAU,WAAf;IAA2B,eAAY,MAAvC;IAAA,WACFE,kBAAkB,iBAAI;MAAG,SAAS,EAAC,SAAb;MAAA,iBAA0BH,cAA1B;IAAA;MAAA;MAAA;MAAA;IAAA,QADpB,EAEFK,eAAe,iBAAI;MAAG,SAAS,EAAC,iBAAb;MAAA,gBAAiCH,WAAjC;IAAA;MAAA;MAAA;MAAA;IAAA,QAFjB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAIH,CAzCD;;GAAMH,a;;KAAAA,a;AA2CNA,aAAa,CAACc,SAAd,GAA0B;EACtBb,cAAc,EAAEF,SAAS,CAACgB,MAAV,CAAiBC,UADX;EAEtBb,WAAW,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC,UAFR;EAGtBd,SAAS,EAAEH,SAAS,CAACkB;AAHC,CAA1B;AAOA,eAAejB,aAAf"},"metadata":{},"sourceType":"module"}